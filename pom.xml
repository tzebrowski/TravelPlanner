<project>
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.h.smartticketing</groupId>
	<artifactId>TravelPlanner</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<properties>
		<otp.serialization.version.id>89</otp.serialization.version.id>
		<!-- Lib versions - keep list sorted on property name -->
		<geotools.version>28.2</geotools.version>
		<google.dagger.version>2.45</google.dagger.version>
		<jackson.version>2.14.2</jackson.version>
		<jersey.version>3.1.1</jersey.version>
		<junit.version>5.9.2</junit.version>
		<micrometer.version>1.10.4</micrometer.version>
		<netcdf4.version>5.5.3</netcdf4.version>
		<netty.version>4.1.74.Final</netty.version>
		<logback.version>1.4.5</logback.version>
		<lucene.version>9.5.0</lucene.version>
	</properties>
	<repositories>
		<!-- Hack to force maven to check central first. Maven central is inherited from the superpom,
          but ends up at the end of the list. Though most of the time the artifact is in central,
          Maven tries to download from every other repository and fails before checking central.
          Do not change the id from central2 to central, otherwise the entry will be ignored. -->
		<repository>
			<id>central2</id>
			<name>Check central first to avoid a lot of not found warnings</name>
			<url>https://repo.maven.apache.org/maven2</url>
		</repository>
		<repository>
			<id>osgeo</id>
			<name>Open Source Geospatial Foundation Repository</name>
			<url>https://repo.osgeo.org/repository/release/</url>
		</repository>
		<repository>
			<id>onebusaway-releases</id>
			<name>Onebusaway Releases Repo</name>
			<url>https://repo.camsys-apps.com/releases/</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>de.grundid.opendatalab</groupId>
			<artifactId>geojson-jackson</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-coverage</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-geotiff</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-opengis</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-wfs-ng</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-geojson-core</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-geojson-core</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>com.conveyal</groupId>
			<artifactId>kryo-tools</artifactId>
			<version>1.5.0</version>
		</dependency>
		<!-- kryo serializers for Guava types !-->
		<dependency>
			<groupId>de.javakaffee</groupId>
			<artifactId>kryo-serializers</artifactId>
			<version>0.45</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<version>${micrometer.version}</version>
		</dependency>
		<dependency>
			<groupId>jakarta.ws.rs</groupId>
			<artifactId>jakarta.ws.rs-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.opentripplanner</groupId>
			<artifactId>otp</artifactId>
			<version>2.3.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.7.21</version>
		</dependency>
		<dependency>
			<groupId>com.sparkjava</groupId>
			<artifactId>spark-core</artifactId>
			<version>2.9.4</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.20</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.github.cdimascio</groupId>
			<artifactId>java-dotenv</artifactId>
			<version>5.1.1</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>sample</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptorRefs>
						<!-- This tells Maven to include all dependencies -->
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>com.h.smartticketing.TravelPlannerService</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>